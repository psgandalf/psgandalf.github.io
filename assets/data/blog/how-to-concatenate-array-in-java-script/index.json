{"hash":"c2842e6edab0b7efd9f4e48c4d8715a346f6c6f2","data":{"post":{"id":"e9f93c88e536d66c9f96d25c4f48e223","title":"How to Concatenate Array in JavaScript","content":"<p>There are a few ways to concatenate arrays in JavaScript.</p>\n<h2 id=\"arrayconcat\"><a href=\"#arrayconcat\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Array.concat</h2>\n<p>We can all <code>Array.concat</code> on an array to combine 2 arrays and return the new one. For example:</p>\n<pre><code>const a = [1,2,3];\nconst b = [4,5];\nconst c = a.concat(b) // [1,2,3,4,5]\n</code></pre>\n<h2 id=\"arraypush\"><a href=\"#arraypush\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Array.push</h2>\n<p>We can push elements of one array into another.</p>\n<pre><code>const a = [1,2,3];\nconst b = [4,5];\nlet c = Object.assign([], a);\nfor (let i = 0; i &#x3C; b.length; i++){\n  c.push(b[i]);\n}\nconsole.log(c); // [1,2,3,4,5]\n</code></pre>\n<p>What we did is make a copy of <code>a</code> and assigned it to <code>c</code> , then pushed the elements of <code>b</code> by looping through it and adding them to the end of <code>c</code> .</p>\n<h2 id=\"spread-operator\"><a href=\"#spread-operator\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Spread Operator</h2>\n<p>With ES6 or later, we can use the spread operator to spread the items from another array into a new array by doing the following:</p>\n<pre><code>const a = [1,2,3];\nconst b = [4,5];\nconst c = [...a, ...b];\nconsole.log(c); // [1,2,3,4,5]\n</code></pre>\n<p><img src=\"https://cdn-images-1.medium.com/max/800/1*3X6EiKc-njoRpCB1AWnv3Q.png\"></p>\n","date":"4 May 2019","timeToRead":1}},"context":{}}